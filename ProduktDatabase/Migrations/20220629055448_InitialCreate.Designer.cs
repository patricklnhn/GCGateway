// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProduktDatabase;

#nullable disable

namespace ProduktDatabase.Migrations
{
    [DbContext(typeof(Entities))]
    [Migration("20220629055448_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProduktDatabase.Forretningstjeneste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Forretningstjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.Komponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Komponent");
                });

            modelBuilder.Entity("ProduktDatabase.KomponentKostnader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FraDato")
                        .HasColumnType("datetime2");

                    b.Property<int>("KomponentId")
                        .HasColumnType("int");

                    b.Property<int>("MRC")
                        .HasColumnType("int");

                    b.Property<int>("OTC")
                        .HasColumnType("int");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("KomponentId");

                    b.ToTable("KomponentKostnader");
                });

            modelBuilder.Entity("ProduktDatabase.Tilvalg", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tilvalg");
                });

            modelBuilder.Entity("ProduktDatabase.TilvalgKostnader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FraDato")
                        .HasColumnType("datetime2");

                    b.Property<int>("MRC")
                        .HasColumnType("int");

                    b.Property<int>("OTC")
                        .HasColumnType("int");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.Property<int>("TilvalgId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TilvalgId");

                    b.ToTable("TilvalgKostnader");
                });

            modelBuilder.Entity("ProduktDatabase.TilvalgPrTjeneste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.Property<int>("TilvalgId")
                        .HasColumnType("int");

                    b.Property<int>("TjenesteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TilvalgId");

                    b.HasIndex("TjenesteId");

                    b.ToTable("TilvalgPrTjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.Tjeneste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ForretningstjenesteId")
                        .HasColumnType("int");

                    b.Property<string>("Navn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.Property<int>("TjenesteNummer")
                        .HasColumnType("int");

                    b.Property<string>("VersjonsNummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ForretningstjenesteId");

                    b.ToTable("Tjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.TjenesteKomponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KomponentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.Property<int>("TjenesteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KomponentId");

                    b.HasIndex("TjenesteId");

                    b.ToTable("TjenesteKomponent");
                });

            modelBuilder.Entity("ProduktDatabase.TjenesteKostnaderOgInntekter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Bruker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FraDato")
                        .HasColumnType("datetime2");

                    b.Property<int>("MRC")
                        .HasColumnType("int");

                    b.Property<int>("MRR")
                        .HasColumnType("int");

                    b.Property<int>("OTC")
                        .HasColumnType("int");

                    b.Property<int>("OTR")
                        .HasColumnType("int");

                    b.Property<DateTime>("TS")
                        .HasColumnType("datetime2");

                    b.Property<int>("TjenesteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TjenesteId");

                    b.ToTable("TjenesteKostnaderOgInntekter");
                });

            modelBuilder.Entity("ProduktDatabase.KomponentKostnader", b =>
                {
                    b.HasOne("ProduktDatabase.Komponent", "Komponent")
                        .WithMany()
                        .HasForeignKey("KomponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponent");
                });

            modelBuilder.Entity("ProduktDatabase.TilvalgKostnader", b =>
                {
                    b.HasOne("ProduktDatabase.Tilvalg", "Tilvalg")
                        .WithMany()
                        .HasForeignKey("TilvalgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tilvalg");
                });

            modelBuilder.Entity("ProduktDatabase.TilvalgPrTjeneste", b =>
                {
                    b.HasOne("ProduktDatabase.Tilvalg", "Tilvalg")
                        .WithMany()
                        .HasForeignKey("TilvalgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduktDatabase.Tjeneste", "Tjeneste")
                        .WithMany()
                        .HasForeignKey("TjenesteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tilvalg");

                    b.Navigation("Tjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.Tjeneste", b =>
                {
                    b.HasOne("ProduktDatabase.Forretningstjeneste", "Forretningstjeneste")
                        .WithMany()
                        .HasForeignKey("ForretningstjenesteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Forretningstjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.TjenesteKomponent", b =>
                {
                    b.HasOne("ProduktDatabase.Komponent", "Komponent")
                        .WithMany()
                        .HasForeignKey("KomponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProduktDatabase.Tjeneste", "Tjeneste")
                        .WithMany()
                        .HasForeignKey("TjenesteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Komponent");

                    b.Navigation("Tjeneste");
                });

            modelBuilder.Entity("ProduktDatabase.TjenesteKostnaderOgInntekter", b =>
                {
                    b.HasOne("ProduktDatabase.Tjeneste", "Tjeneste")
                        .WithMany()
                        .HasForeignKey("TjenesteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tjeneste");
                });
#pragma warning restore 612, 618
        }
    }
}
